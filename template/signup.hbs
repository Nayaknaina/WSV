<!DOCTYPE html>
<html lang="en">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="preload stylesheet"
  href="https://d1z8p0imlkk5pt.cloudfront.net/static/fontawesome/css/all.min.9f39b1d134b7.css" as="style"
  onload="this.rel='stylesheet'">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/11.0.4/css/intlTelInput.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
<script src="https://cdn.tailwindcss.com"></script>
<style>
  @import url("https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700;800&display=swap");

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body,
  input {
    font-family: "Poppins", sans-serif;
  }


  #message {
    display: none;

    color: #000;
    position: relative;
    padding: 10px;
    margin-top: 5px;
  }

  #message p {
    padding: 5px 10px;
    font-size: 10px;
  }

  .valid {
    color: green;
  }

  .valid:before {
    position: relative;
    left: -35px;
    content: "✔";
  }

  .invalid {
    color: red;
  }

  .invalid:before {
    position: relative;
    left: -35px;
    content: "✖";
  }

  .password-toggle {
    position: absolute;
    top: 65%;
    right: 10px;
    transform: translateY(-50%);
    cursor: pointer;
  }

  .password-toggle i {
    font-size: 18px;
    line-height: 1;
    color: #333;
    transition: color 0.3s ease-in-out;
    margin-bottom: 20px;
  }

  .password-toggle i:hover {
    color: #000;
  }

  .container {
    position: relative;
    width: 100%;
    background-color: #fff;
    min-height: 100vh;
    overflow: hidden;
  }

  .forms-container {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
  }

  .signin-signup {
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    left: 75%;
    width: 50%;
    transition: 1s 0.7s ease-in-out;
    display: grid;
    grid-template-columns: 1fr;
    z-index: 5;
  }

  form {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    padding: 0rem 5rem;
    transition: all 0.2s 0.7s;
    overflow: hidden;
    grid-column: 1 / 2;
    grid-row: 1 / 2;
  }

  form.sign-up-form {
    opacity: 0;
    z-index: 1;
  }

  form.sign-in-form {
    z-index: 2;
  }

  .title {
    font-size: 2.2rem;
    color: #444;
    margin-bottom: 10px;
  }

  .input-field {
    max-width: 380px;
    width: 100%;
    background-color: #f0f0f0;
    margin: 10px 0;
    height: 55px;
    border-radius: 55px;
    display: grid;
    grid-template-columns: 15% 85%;
    padding: 0 0.4rem;
    position: relative;
  }

  .input-field i {
    text-align: center;
    line-height: 55px;
    color: #acacac;
    transition: 0.5s;
    font-size: 1.1rem;
  }

  .input-field input {
    display: block;
    width: 100%;
    height: auto;
    padding: 15px 19px;
    font-size: 1rem;
    line-height: 1.4;
    color: #475F7B;
    background: none;
    outline: none;
    border: none;
  }


  .input-field input::placeholder {
    color: #aaa;
    font-weight: 500;
  }

  .social-container {
    position: relative;
    border-radius: 5px;
    background-color: #ffffff;
    text-align: center;

  }

  .social-icon {
    /*width: 100%;*/
    padding: 12px;
    border: none;
    border-radius: 4px;
    margin: 5px 0;
    opacity: 0.85;
    display: inline-block;
    font-size: 17px;
    line-height: 20px;
    text-decoration: none;
    background-color: #dd4b39;
    color: white;
  }

  .social-icon:hover {
    opacity: 1;
  }

  .social-text {
    padding: 0.7rem 0;
    font-size: 1rem;
  }

  .social-media {
    display: flex;
    justify-content: center;
  }


  .btn {
    width: 150px;
    background-color: #5995fd;
    border: none;
    outline: none;
    height: 45px;
    border-radius: 49px;
    color: #fff;
    text-transform: uppercase;
    font-weight: 600;
    margin: 10px 0;
    cursor: pointer;
    transition: 0.5s;
  }

  .btn:hover {
    background-color: #4d84e2;
  }

  .panels-container {
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    left: 0;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
  }

  .container:before {
    content: "";
    position: absolute;
    height: 2000px;
    width: 2000px;
    top: -10%;
    right: 48%;
    transform: translateY(-50%);
    background-image: linear-gradient(-45deg, #4481eb 0%, #04befe 100%);
    transition: 1.8s ease-in-out;
    border-radius: 50%;
    z-index: 6;
  }

  .image {
    width: 100%;
    transition: transform 1.1s ease-in-out;
    transition-delay: 0.4s;
  }

  .panel {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    justify-content: space-around;
    text-align: center;
    z-index: 6;
  }

  .left-panel {
    pointer-events: all;
    padding: 3rem 17% 2rem 12%;
  }

  .right-panel {
    pointer-events: none;
    padding: 3rem 12% 2rem 17%;
  }

  .panel .content {
    color: #fff;
    transition: transform 0.9s ease-in-out;
    transition-delay: 0.6s;
  }

  .panel h3 {
    font-weight: 600;
    line-height: 1;
    font-size: 1.5rem;
  }

  .panel p {
    font-size: 0.95rem;
    padding: 0.7rem 0;
  }

  .btn.transparent {
    margin: 0;
    background: none;
    border: 2px solid #fff;
    width: 130px;
    height: 41px;
    font-weight: 600;
    font-size: 0.8rem;
  }

  .btn.transparent :hover {}

  .right-panel .image,
  .right-panel .content {
    transform: translateX(800px);
  }

  /* ANIMATION */

  .container.sign-up-mode:before {
    transform: translate(100%, -50%);
    right: 52%;
  }

  .container.sign-up-mode .left-panel .image,
  .container.sign-up-mode .left-panel .content {
    transform: translateX(-800px);
  }

  .container.sign-up-mode .signin-signup {
    left: 25%;
  }

  .container.sign-up-mode form.sign-up-form {
    opacity: 1;
    z-index: 2;
  }

  .container.sign-up-mode form.sign-in-form {
    opacity: 0;
    z-index: 1;
  }

  .container.sign-up-mode .right-panel .image,
  .container.sign-up-mode .right-panel .content {
    transform: translateX(0%);
  }

  .container.sign-up-mode .left-panel {
    pointer-events: none;
  }

  .container.sign-up-mode .right-panel {
    pointer-events: all;
  }

  @media (max-width: 870px) {
    .container {
      min-height: 800px;
      height: 100vh;
    }

    .signin-signup {
      width: 100%;
      top: 95%;
      transform: translate(-50%, -100%);
      transition: 1s 0.8s ease-in-out;
    }

    .signin-signup,
    .container.sign-up-mode .signin-signup {
      left: 50%;
    }

    .panels-container {
      grid-template-columns: 1fr;
      grid-template-rows: 1fr 2fr 1fr;
    }

    .panel {
      flex-direction: row;
      justify-content: space-around;
      align-items: center;
      padding: 2.5rem 8%;
      grid-column: 1 / 2;
    }

    .right-panel {
      grid-row: 3 / 4;
    }

    .left-panel {
      grid-row: 1 / 2;
    }

    .image {
      width: 200px;
      transition: transform 0.9s ease-in-out;
      transition-delay: 0.6s;
    }

    .panel .content {
      padding-right: 15%;
      transition: transform 0.9s ease-in-out;
      transition-delay: 0.8s;
    }

    .panel h3 {
      font-size: 1.2rem;
    }

    .panel p {
      font-size: 0.7rem;
      padding: 0.5rem 0;
    }

    .btn.transparent {
      width: 110px;
      height: 35px;
      font-size: 0.7rem;
    }

    .container:before {
      width: 1500px;
      height: 1500px;
      transform: translateX(-50%);
      left: 30%;
      bottom: 68%;
      right: initial;
      top: initial;
      transition: 2s ease-in-out;
    }

    .container.sign-up-mode:before {
      transform: translate(-50%, 100%);
      bottom: 32%;
      right: initial;
    }

    .container.sign-up-mode .left-panel .image,
    .container.sign-up-mode .left-panel .content {
      transform: translateY(-300px);
    }

    .container.sign-up-mode .right-panel .image,
    .container.sign-up-mode .right-panel .content {
      transform: translateY(0px);
    }

    .right-panel .image,
    .right-panel .content {
      transform: translateY(300px);
    }

    .container.sign-up-mode .signin-signup {
      top: 5%;
      transform: translate(-50%, 0);
    }
  }

  @media (max-width: 570px) {
    form {
      padding: 0 1.5rem;
    }

    .image {
      display: none;
    }

    .panel .content {
      padding: 0.5rem 1rem;
    }

    .container {
      padding: 1.5rem;
    }

    .container:before {
      bottom: 72%;
      left: 50%;
    }

    .container.sign-up-mode:before {
      bottom: 28%;
      left: 50%;
    }
  }
</style>

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet">
  <title>SignIn/SignUp</title>
</head>

<body>

  <div id="loadBox" class="load w-screen h-screen absolute top-0 left-0 z-50 "
    style="background-color: #f8f8f883; display: none;">
    <div class="img w-[200px] absolute top-2/4 left-2/4  "
      style="transform: translate(-50%, -50%); border-radius: 50%;">
      <img src="/images/loading.gif" style="background: transparent; border-radius: 50px;" alt="">
    </div>
  </div>

  <div id="otpFillFormBox" style="background-color: #5d5d5d85; display: none;"
    class=" absolute w-screen h-screen top-0 left-0 z-50">
    <div style="transform: translate(-50%, -50%); box-shadow: 1px 1px 20px rgb(80, 80, 80); "
      class="bg-white shadow-lg absolute top-2/4 left-2/4 rounded-lg px-4 py-8 max-w-xs md:max-w-md w-full">
      <h2 class="text-xl md:text-2xl font-bold text-center text-gray-800 mb-6">Verify Your OTP</h2>
      <p class="text-center text-gray-600 mb-4">Enter the 6-digit OTP sent to your email.</p>
      <form id="otpForm">
        <div class="flex space-x-2 justify-center mb-6">
          <input type="text" maxlength="1"
            class="otp-input w-10 h-10 md:w-12 md:h-12 border border-gray-300 rounded-lg text-center text-lg font-semibold focus:outline-none focus:ring-2 focus:ring-purple-500" />
          <input type="text" maxlength="1"
            class="otp-input w-10 h-10 md:w-12 md:h-12 border border-gray-300 rounded-lg text-center text-lg font-semibold focus:outline-none focus:ring-2 focus:ring-purple-500" />
          <input type="text" maxlength="1"
            class="otp-input w-10 h-10 md:w-12 md:h-12 border border-gray-300 rounded-lg text-center text-lg font-semibold focus:outline-none focus:ring-2 focus:ring-purple-500" />
          <input type="text" maxlength="1"
            class="otp-input w-10 h-10 md:w-12 md:h-12 border border-gray-300 rounded-lg text-center text-lg font-semibold focus:outline-none focus:ring-2 focus:ring-purple-500" />
          <input type="text" maxlength="1"
            class="otp-input w-10 h-10 md:w-12 md:h-12 border border-gray-300 rounded-lg text-center text-lg font-semibold focus:outline-none focus:ring-2 focus:ring-purple-500" />
          <input type="text" maxlength="1"
            class="otp-input w-10 h-10 md:w-12 md:h-12 border border-gray-300 rounded-lg text-center text-lg font-semibold focus:outline-none focus:ring-2 focus:ring-purple-500" />
        </div>
        <button type="button" onclick="matchVerifyOtp()"
          class="w-full bg-purple-500 text-white py-2 md:py-3 rounded-lg font-semibold hover:bg-purple-600 transition duration-200">Verify
          OTP</button>
      </form>
      <p class="text-center text-gray-600 mt-6">
        Didn’t receive the code? <a href="#" class="text-purple-500 hover:underline">Resend OTP</a>
      </p>
    </div>
  </div>
  <div class="container">
    <div class="forms-container">
      <div class="signin-signup">



        <form action="/user/login" method="post" class="sign-in-form">
          <h2 class="title">Sign in</h2>
          <div class="input-field">
            <i class="fas fa-user"></i>
            <input type="email" name="email" placeholder="Email" required />
          </div>

          <div class="input-field">
            <i class="fas fa-lock"></i>

            <input placeholder="Password" name="password" id="" type="password" required>
            <span class="password-toggle"><i class="fas fa-eye"></i></span>
          </div>

          <input type="submit" value="Submit" class="btn solid" />

          <p class="social-text">Or Sign Up With </p>
          <div class="social-container">
            {{!-- <a href="#" class="social-icon">
              <i class="fab fa-facebook-f"></i>
            </a>--}}
            <a href="/auth/google" class="social-icon"><i class="fa-brands fa-google"></i>
              </i>
              Login with Google
            </a>
            <a href="/member/login" class="social-icon">
              <i class="fa fa-plus" aria-hidden="true"></i>
              Already a TeamMember ?
            </a>

            {{!-- <a href="#" class="social-icon">
              <i class="fab fa-linkedin-in"></i>
            </a> --}}
          </div>
        </form>



        <form id="signUpForm" class="sign-up-form">
          <h2 class="title">Sign up</h2>
          <div class="input-field">
            <i class="fas fa-user"></i>
            <input placeholder="First Name" id="signName" name="name" type="text" required>
          </div>
          <div class="input-field">
            <i class="fas fa-envelope"></i>
            <input placeholder="Email" name="email" id="emailInp" type="email" required>
          </div>
          <div class="input-field">
            <i class="fas fa-phone"></i>
            <input placeholder="Phone Number" id="mobile_code" type="tel" name="mobile" pattern="^\d{10,15}$"
              title="Please enter a valid phone number (10-15 digits)" required>
          </div>

          <div class="input-field">
            <i class="fas fa-lock"></i>
            <input for="psw" id="psw" placeholder=" Password" name="password" type="password"
              pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}"
              title="Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters"
              required>
            <span class="password-toggle"><i class="fas fa-eye"></i></span>
          </div>
          <div class="input-field">
            <i class="fas fa-lock"></i>
            <input for="psw" placeholder="Confirm Password" id="signConPassword" name="confirmPassword" type="password"
              pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}"
              title="Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters"
              required>
            <span class="password-toggle"> <i class="fas fa-eye"></i></span>
          </div>
          <div id="message">
            <h5>Password must contain the following:</h5>
            <p id="letter" class="invalid">A <b>lowercase</b> letter</p>
            <p id="capital" class="invalid">A <b>capital (uppercase)</b> letter</p>
            <p id="special" class="invalid">A <b>Special </b> characters</p>
            <p id="number" class="invalid">A <b>number</b></p>
            <p id="length" class="invalid">Minimum <b>8 characters</b></p>
          </div>

          <div style="align-items: center;">
            <label>
              <input type="checkbox" id="agentCheckbox" onclick="toggleAgentCodeInput()"> Do you have an agent code?
            </label>
            <div class="input-field" id="agentCodeInput" style="display: none; margin-left: 15px;">
              <input placeholder="Enter Agent Code" id="agentCode" name="agentCode" type="text">
            </div>
          </div>


          <div class="row">
            <input type="button" id="emailVerifyBtn" onclick="verifyEmail()" class="btn" value="Verifiy email" />
            <input type="button" id="signupSubmitBtn" onclick="submitSignupForm()" class="btn"
              style="background-color: #696969; cursor: not-allowed;" disabled value="Submit" />
          </div>


          <p class="social-text">Or Sign Up With </p>
          <div class="social-media">
            {{!-- <a href="#" class="social-icon">
              <i class="fab fa-facebook-f"></i>
            </a>
            <a href="#" class="social-icon">
              <i class="fab fa-twitter"></i>
            </a> --}}
            <a href="/auth/google" class="social-icon"><i class="fa fa-google fa-fw">
              </i> Login with Google+
            </a>
            {{!-- <a href="#" class="social-icon">
              <i class="fab fa-linkedin-in"></i>
            </a> --}}
          </div>
        </form>

      </div>
    </div>

    <div class="panels-container">
      <div class="panel left-panel">
        <div class="content">
          <h3>Start your journey</h3>
          <p>
            Don't have a 360followups Account yet?
            SignUP To <b>360followups</b>
          </p>
          <button class="btn transparent" id="sign-up-btn">
            Sign up
          </button>
        </div>
        <img src="sign-up.png" class="image" alt="" />
      </div>
      <div class="panel right-panel">
        <div class="content">
          <h3>Welcome Back!</h3>
          <p>
            Already a user SignIn Now! Please Enter your registered data
          </p>
          <button class="btn transparent" id="sign-in-btn">
            Sign in
          </button>
        </div>
        <img src="./images/signin.png" class="image" alt="" />
      </div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
  <script nonce="Hg5F/VDpALFrdOCYRvBAvQ==" src="https://unpkg.com/axios/dist/axios.min.js"></script>

  {{#if errorMessage }}
  <script>
    toastr.error("{{errorMessage}}");
  </script>
  {{/if }}
  <script>
    const sign_in_btn = document.querySelector("#sign-in-btn");
    const sign_up_btn = document.querySelector("#sign-up-btn");
    const container = document.querySelector(".container");

    sign_up_btn.addEventListener("click", () => {
      container.classList.add("sign-up-mode");
    });

    sign_in_btn.addEventListener("click", () => {
      container.classList.remove("sign-up-mode");
    });

    var myInput = document.getElementById("psw");
    var letter = document.getElementById("letter");
    var capital = document.getElementById("capital");
    var number = document.getElementById("number");
    var length = document.getElementById("length");

    // When the user clicks on the password field, show the message box
    myInput.onfocus = function () {
      document.getElementById("message").style.display = "block";
    }

    // When the user clicks outside of the password field, hide the message box
    myInput.onblur = function () {
      document.getElementById("message").style.display = "none";
    }

    // When the user starts to type something inside the password field
    myInput.onkeyup = function () {
      // Validate lowercase letters
      var lowerCaseLetters = /[a-z]/g;
      if (myInput.value.match(lowerCaseLetters)) {
        letter.classList.remove("invalid");
        letter.classList.add("valid");
      } else {
        letter.classList.remove("valid");
        letter.classList.add("invalid");
      }

      // Validate capital letters
      var upperCaseLetters = /[A-Z]/g;
      if (myInput.value.match(upperCaseLetters)) {
        capital.classList.remove("invalid");
        capital.classList.add("valid");
      } else {
        capital.classList.remove("valid");
        capital.classList.add("invalid");
      }


      //Validate special character
      var specialCharacters = /[!@#$%^&*(),.?":{}|<>]/g;
      if (myInput.value.match(specialCharacters)) {
        special.classList.remove("invalid");
        special.classList.add("valid");
      } else {
        special.classList.remove("valid");
        special.classList.add("invalid");
      }

      // Validate numbers
      var numbers = /[0-9]/g;
      if (myInput.value.match(numbers)) {
        number.classList.remove("invalid");
        number.classList.add("valid");
      } else {
        number.classList.remove("valid");
        number.classList.add("invalid");
      }

      // Validate length
      if (myInput.value.length >= 8) {
        length.classList.remove("invalid");
        length.classList.add("valid");
      } else {
        length.classList.remove("valid");
        length.classList.add("invalid");
      }
    }

    //eye icon-toggle password
    const passwordField = document.getElementById("password");
    // Select all password toggle icons
    const togglePasswords = document.querySelectorAll(".password-toggle i");

    // Add event listener to each toggle icon
    togglePasswords.forEach((togglePassword, index) => {
      togglePassword.addEventListener("click", function () {
        // Get the corresponding password field
        const passwordField = togglePassword.parentElement.previousElementSibling;
        if (passwordField.type === "password") {
          passwordField.type = "text";
          togglePassword.classList.remove("fa-eye");
          togglePassword.classList.add("fa-eye-slash");
        } else {
          passwordField.type = "password";
          togglePassword.classList.remove("fa-eye-slash");
          togglePassword.classList.add("fa-eye");
        }
      });
    });


  </script>

  <script>
    // Sabhi OTP input fields ko select kar rahe hain
    const otpInputs = document.querySelectorAll('.otp-input');

    // Sabhi input fields par ek event listener laga rahe hain
    otpInputs.forEach((input, index) => {
      input.addEventListener('input', (e) => {
        // Agr user ne koi value enter ki hai to agle input pe focus ho jaye
        if (input.value.length === 1 && index < otpInputs.length - 1) {
          otpInputs[index + 1].focus();
        }
      });

      // Agr user backspace press karta hai to pichle input pe wapas jaye
      input.addEventListener('keydown', (e) => {
        if (e.key === 'Backspace' && input.value === '' && index > 0) {
          otpInputs[index - 1].focus();
        }
      });
    });
  </script>

  <script>
    let loadBox = document.querySelector('#loadBox')
    let otpForm = document.querySelector('#otpFillFormBox')
    let submitBtn = document.querySelector('#signupSubmitBtn')
    let emailVerifyBtn = document.querySelector('#emailVerifyBtn')
    let emailInp = document.querySelector('#emailInp')
    function verifyBtnDisplay() {
      document.querySelector('#emailVerifyBtn').style.display = 'initial'
    }

    async function verifyEmail() {

      const emailInput = document.getElementById('emailInp');
      const email = emailInput.value.trim();

      // Client-side validation
      if (!validateEmail(email)) {
        let textContent = 'Please enter a valid email address.';
        toastr.error(textContent);
        return
      }

      try {
        // Send request to the server for email verification
        loadBox.style.display = 'block'
        const response = await axios.post('/api/verify', { email });

        if (response) {
          let textContent = response.data.msg;
          toastr.success(textContent)
          otpForm.style.display = 'block'
        } else {
          let textContent = response.data.msg;
          toastr.error(textContent);
          loadBox.style.display = 'none'
        }
      } catch (error) {
        console.error('Error verifying email:', error);
        let textContent = 'An error occurred while verifying the email. Please try again later.';
        toastr.error(textContent);
        loadBox.style.display = 'none'
      }
    };

    async function submitSignupForm() {

      const form = document.querySelector('#signUpForm')
      const name = document.querySelector('#signUpForm #signName').value
      const emailInp = document.querySelector('#signUpForm #emailInp').value
      const pass = document.querySelector('#signUpForm #psw').value
      const conPass = document.querySelector('#signUpForm #signConPassword').value
      const agentCode = document.querySelector('#signUpForm #agentCode').value
      const mobile = document.querySelector('#signUpForm #mobile_code').value
      const email = emailInp.trim();

      const countryData = $("#mobile_code").intlTelInput("getSelectedCountryData");
      const countryCode = countryData.dialCode; // Extracting the dial code

      let formData = {
        name,
        email,
        password: pass,
        confirmPassword: conPass,
        agentCode,
        mobile,
        countryCode,
      }
      console.log(formData)
      try {
        let res = await axios.post("/user/signup", formData);
        if (res.status === 200) {
          form.reset()
          toastr.success(res.data.msg);
          setTimeout(() => {
            window.location.href = "/user/dashboard";
          }, 3000);
        }

      } catch (err) {
        console.log(err)
      }
    };

    // send req to server for otp verfication
    async function matchVerifyOtp() {
      const inputs = document.querySelectorAll('.otp-input');

      let otp = '';
      inputs.forEach(input => {
        otp += input.value;
      });
      if (otp.length !== 6) {
        toastr.error('invailid otp')
        return
      }
      loadBox.style.zIndex = '999999'
      try {
        let res = await axios.post("/api/otp/verify", { reqOtp: otp });
        console.log(res);

        if (res.status === 200) {
          let textContent = res.data.msg;
          toastr.success(textContent);
          loadBox.style.display = 'none';
          otpForm.style.display = 'none';
          emailVerifyBtn.style.display = 'none';
          submitBtn.style.cursor = 'pointer';
          submitBtn.style.backgroundColor = '#5995fd';
          submitBtn.disabled = false;
          console.log(emailInp.value)
          emailInp.disabled = true;
        }
      } catch (error) {
        if (error.response && error.response.status === 403) {
          let textContent = error.response.data.msg;
          toastr.error(textContent);
          console.log("loadbox hata do");
          loadBox.style.display = 'none';
          otpForm.style.display = 'none';
        } else if (error.response && error.response.status === 400) {
          let textContent = error.response.data.msg;
          toastr.error(textContent || 'Invalid OTP!');
          loadBox.style.display = 'none';
          otpForm.style.display = 'block'; // You can decide whether to show the form again
        } else {
          toastr.error('Ooops!, Something went wrong!');
          loadBox.style.display = 'none';
          otpForm.style.display = 'none';
        }
      }
    }
    // Email validation function
    function validateEmail(email) {
      const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/; // Basic regex for email validation
      return re.test(String(email).toLowerCase());
    }


  </script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/11.0.4/js/intlTelInput.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/intl-tel-input@17.0.13/build/js/utils.js"></script>
  <script>
    $(document).ready(function () {
      $("#mobile_code").intlTelInput({
        initialCountry: "in",
        separateDialCode: true,
        utilsScript: "https://cdn.jsdelivr.net/npm/intl-tel-input@17.0.13/build/js/utils.js"
      });
    });
  </script>

  <script>
    function toggleAgentCodeInput() {
      const agentCodeInput = document.getElementById('agentCodeInput');
      const agentCheckbox = document.getElementById('agentCheckbox');
      agentCodeInput.style.display = agentCheckbox.checked ? 'block' : 'none';
    }

  </script>
</body>

</html>