<!DOCTYPE html>
<html>

<head>
    <title>
        Connect
    </title>
    <meta name="robots" content="noindex, nofollow">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" type="image/png" sizes="32x32" href="./" />
    <link href="https://cdn.jsdelivr.net/npm/select2@4.0.12/dist/css/select2.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.10.0/css/all.css">

    <link rel="stylesheet" href="https://d3cuh014go2nda.cloudfront.net/global/assets/css/main.css">
    <link rel="stylesheet" href="/assets/css/custom.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"
        integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">


    <link rel="stylesheet" type="text/css" href="/styles/loader.css">
    <script nonce="Hg5F/VDpALFrdOCYRvBAvQ==" src="https://code.jquery.com/jquery-3.6.0.min.js"
        integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script nonce="Hg5F/VDpALFrdOCYRvBAvQ==" type="text/javascript">
        window.heap = window.heap || [], heap.load = function (e, t) {
            window.heap.appid = e, window.heap.config = t = t || {};
            var r = t.forceSSL || "https:" === document.location.protocol,
                a = document.createElement("script");
            a.type = "text/javascript", a.async = !0, a.src = (r ? "https:" : "http:") + "//cdn.heapanalytics.com/js/heap-" + e + ".js";
            var n = document.getElementsByTagName("script")[0];
            n.parentNode.insertBefore(a, n);
            for (var o = function (e) {
                return function () {
                    heap.push([e].concat(Array.prototype.slice.call(arguments, 0)))
                }
            }, p = ["addEventProperties", "addUserProperties", "clearEventProperties", "identify", "resetIdentity", "removeEventProperty", "setEventProperties", "track", "unsetEventProperty"], c = 0; c < p.length; c++) heap[p[c]] = o(p[c])
        };
        heap.load("490363613");
    </script>
    <script nonce="Hg5F/VDpALFrdOCYRvBAvQ==" async
        src="https://www.googletagmanager.com/gtm.js?id=GTM-TQ5D84C&nonce=Hg5F/VDpALFrdOCYRvBAvQ=="></script>


</head>
<style>
    #integration-tab {
        width: 100%;
        margin: 50px auto;
        padding: 20px;
        background-color: #f9f9f9;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        border-radius: 10px;
        font-family: Arial, sans-serif;
        text-align: center;
    }

    #integration-tab button {
        background-color: #007bff;
        /* Blue button */
        color: white;
        border: none;
        padding: 10px 24px;
        margin: 15px 0;
        font-size: 18px;
        border-radius: 5px;
        border: 1px solid #007bff;
        cursor: pointer;

    }

    #integration-tab button:disabled {
        background-color: #bfbfbf;
        cursor: not-allowed;
    }

    #integration-tab button:hover:not(:disabled) {
        background-color: #ffffff;

        color: #007bff;
        border: 1px solid #ddd;
        border-color: #007bff;

    }

    #apiKeyDisplay {
        font-weight: bold;
        color: #333;
        display: inline-block;
        word-break: break-word;
        /* Ensures long words break */
        max-width: 100%;
        /* Keeps within container */
    }

    /* Input Field Styling */
    #generatedUrl {
        width: 90%;
        padding: 12px;
        margin-top: 15px;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 16px;
        background-color: #f1f1f1;
    }

    #generatedUrl:focus {
        outline: none;
        border-color: #007bff;
    }

    #integration-tab input[readonly] {
        background-color: #f1f1f1;
    }

    p {
        margin: 15px 0;
        font-size: 18px;
        color: #555;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
        #integration-tab {
            width: 80%;
            padding: 20px;
        }
    }

    @media (max-width: 454px) {
        #integration-tab {
            width: 95%;
            padding: 15px;
        }

        #generatedUrl {
            width: 100%;
        }

        button {
            font-size: 16px;
        }
    }
</style>

<body>
    {{!-- {{> nav}} --}}

    <div class="container-fluid">
        <div class="row">
            {{> sidebar}}

            <div class="fg-main-content-wrap col-xl-11 col-lg-11 col-md-11 col-sm-12 p-0 p-b-30 home-section">
                <div>
                    <div class="container-fluid bg-white shadow-sm m-b-40">
                        <div class="container">
                            <div class="row page-titles p-t-35 p-b-15">
                                <div class="col-lg-12 col-12 align-self-center">
                                    <h1 class="text-bodycolor">Website Integration</h1>
                                    <p class="text-secondary font-14"> </p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="container min-vh-100">
                        <div id="integration-tab">
                            <button id="generateKeyBtn">Generate API Key</button>
                            <button id="refreshBtn" style="display:none;">Refresh</button>
                            <p>Your API Key: <span id="apiKeyDisplay">
                                    {{#if user.apiKey}}
                                    {{user.apiKey}}
                                    {{else}}
                                    Not Generated
                                    {{/if}}
                                </span></p>


                            <p>Generated URL: <input type="text" value="http://example.com/api/your-api-key?name={name}&phone={phone}&email={email}&message={message}" id="generatedUrl" readonly></p>
                            <button onclick="copyToClipboard('{{user.apiKey}}')">Copy URL</button>
                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script>
        const apiKeyDisplay = document.getElementById('apiKeyDisplay');
        const generateKeyBtn = document.getElementById('generateKeyBtn');
        const generatedUrlInput = document.getElementById('generatedUrl');
        const refreshBtn = document.getElementById('refreshBtn');
        let apiKeyGenerated = false;

        async function generateKeyAndUrl() {
            if (apiKeyGenerated) {
                alert('API Key already generated!');
                return;
            }
            try {
                const response = await axios.get('/user/generate-key');
                const data = response.data;

                apiKeyDisplay.textContent = data.apiKey;
                generatedUrlInput.value =
                    `http://localhost:8000/api/${data.apiKey}?name={name}&phoneNumber={phoneNumber}&email={email}&message={message}`;

                apiKeyGenerated = true;
                refreshBtn.style.display = 'inline'; // Show refresh button
            } catch (error) {
                alert('Error generating API key');
            }
        }

        function refreshKeyAndUrl() {
            apiKeyGenerated = false;
            apiKeyDisplay.textContent = 'Not Generated';
            generatedUrlInput.value = 'http://example.com/api/your-api-key?name={name}&phone={phone}&email={email}&message={message}';
        }

        function copyToClipboard() {
            generatedUrlInput.select();
            document.execCommand('copy');
            alert('URL copied to clipboard!');
        }

        generateKeyBtn.addEventListener('click', generateKeyAndUrl);
        refreshBtn.addEventListener('click', refreshKeyAndUrl);
    </script>

</body>

</html>